# ===============================================================================
# Copyright 2016 Jake Ross
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ===============================================================================
from functools import reduce

# ============= enthought library imports =======================
# ============= standard library imports ========================
# ============= local library imports  ==========================

EOT = chr(4)
ENQ = chr(5)
STX = chr(2)
ETX = chr(3)
ACK = chr(6)
NAK = chr(15)


def calculate_bcc(packet):
    """
    binary check sum

    generated by taking the exclusive OR of the ASCII values of all the characters transmitted after but excluding (
    STX) up to and including (ETX).
    """

    def exclusive_or(a, b):
        return a ^ b

    packet = [ord(p) for p in packet]
    return chr(reduce(exclusive_or, packet))


if __name__ == "__main__":
    print(calculate_bcc("0011OP"))
# ============= EOF =============================================
